---
const {leader} = Astro.props;

const isValidUrl = (urlString: string | undefined) => {
  if (urlString == undefined) return false;

  var urlPattern = new RegExp(
    "^(https?:\\/\\/)?" + // validate protocol
      "((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|" + // validate domain name
      "((\\d{1,3}\\.){3}\\d{1,3}))" + // validate OR ip (v4) address
      "(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*" + // validate port and path
      "(\\?[;&a-z\\d%_.~+=-]*)?" + // validate query string
      "(\\#[-a-z\\d_]*)?$",
    "i"
  ); // validate fragment locator

  return !!urlPattern.test(urlString);
};
---

<div>
  <h4 class="text-lg mb-4 font-medium">{leader.name}</h4>
  
  <ul class="list-disc pl-6 mb-6 space-y-3">
      <li><strong>Days:</strong> <span id="days">{leader.days}</span></li>
      <li><strong>Time:</strong> <span id="time">{leader.time}</span></li>
      <li><strong>Location:</strong> <span id="location">{leader.location}</span></li>
      {
      isValidUrl(leader.zoom) ?
      <li>
          <!-- svelte-ignore a11y-invalid-attribute -->
          <a id="zoom" href={leader.zoom} class="text-blue-500">Zoom Meeting</a>
      </li>
      : null
      }
      {
      leader.discord != "null" ?
      <li>
          <!-- svelte-ignore a11y-invalid-attribute -->
          <a id="discord" href={leader.discord} class="text-blue-500"
          >Class Discord</a
          >
      </li>
      : null
      }
      </ul>
</div>